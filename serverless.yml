service: journal-paper-auto-checker

frameworkVersion: "3"

provider:
  name: aws
  stage: ${opt:stage, 'prod'}
  region: ${env:AWS_REGION, 'eu-west-1'}
  environment:
    SENDER_EMAIL: ${file(./.env.yml):SENDER_EMAIL}
    JOURNAL_STATUSES_CONFIGS_DYNAMODB_TABLE: ${self:custom.journal-statuses-configs-dynamodb-table}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "ses:SendRawEmail"
          Resource:
            - "*"
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:Query"
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.journal-statuses-configs-dynamodb-table}"

  ecr:
    images:
      img:
        path: ./
        platform: linux/amd64

custom:
  journal-statuses-configs-dynamodb-table: ${self:service}-${self:provider.stage}-journal-statuses-configs

functions:
  cron-checker:
    timeout: 300
    memorySize: 2048
    image:
      name: img
    events: # Run every day at 8am
      - schedule: cron(0 8 * * ? *)

resources:
  Resources:
    JournalStatusesConfigsTable: # stores both journal statuses and configs to avoid having to create two tables
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.journal-statuses-configs-dynamodb-table}
        AttributeDefinitions:
          - AttributeName: pK
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: pK
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
